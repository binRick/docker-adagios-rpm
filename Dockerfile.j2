FROM {{env.MY_CONTAINER_1_IMAGE_UUID}}:latest

ENV container docker
ENV ADAGIOS_HOST adagios.local
ENV ADAGIOS_USER {{auth.adagios.user}}
ENV ADAGIOS_PASS {{auth.adagios.pass}}

# Enable Naemon performance data and service performance data
RUN pynag config --set "process_performance_data=1" ;\
	pynag config --set 'service_perfdata_file=/var/lib/naemon/service-perfdata' ;\
	pynag config --set 'service_perfdata_file_template=DATATYPE::SERVICEPERFDATA\tTIMET::$TIMET$\tHOSTNAME::$HOSTNAME$\tSERVICEDESC::$SERVICEDESC$\tSERVICEPERFDATA::$SERVICEPERFDATA$\tSERVICECHECKCOMMAND::$SERVICECHECKCOMMAND$\tHOSTSTATE::$HOSTSTATE$\tHOSTSTATETYPE::$HOSTSTATETYPE$\tSERVICESTATE::$SERVICESTATE$\tSERVICESTATETYPE::$SERVICESTATETYPE$' ;\
	pynag config --set 'service_perfdata_file_mode=a' ;\
	pynag config --set 'service_perfdata_file_processing_interval=15';\
	pynag config --set 'service_perfdata_file_processing_command=process-service-perfdata-file'

# host performance data
RUN pynag config --set 'host_perfdata_file=/var/lib/naemon/host-perfdata' ;\
	pynag config --set 'host_perfdata_file_template=DATATYPE::HOSTPERFDATA\tTIMET::$TIMET$\tHOSTNAME::$HOSTNAME$\tHOSTPERFDATA::$HOSTPERFDATA$\tHOSTCHECKCOMMAND::$HOSTCHECKCOMMAND$\tHOSTSTATE::$HOSTSTATE$\tHOSTSTATETYPE::$HOSTSTATETYPE$' ;\
	pynag config --set 'host_perfdata_file_mode=a' ;\
	pynag config --set 'host_perfdata_file_processing_interval=15' ;\
	pynag config --set 'host_perfdata_file_processing_command=process-host-perfdata-file'

# host commands
RUN pynag add command command_name=process-service-perfdata-file command_line='/bin/mv /var/lib/naemon/service-perfdata /var/spool/pnp4nagios/service-perfdata.$TIMET$' ;\
	pynag add command command_name=process-host-perfdata-file command_line='/bin/mv /var/lib/naemon/host-perfdata /var/spool/pnp4nagios/host-perfdata.$TIMET$' ;\
	pynag config --append cfg_dir=/etc/naemon/commands/

RUN unlink /etc/naemon/conf.d/windows.cfg ;\
    unlink /etc/naemon/conf.d/switch.cfg ;\
    unlink /etc/naemon/conf.d/printer.cfg ;\
    unlink /etc/naemon/conf.d/localhost.cfg;\
    unlink /etc/naemon/resource.cfg

COPY configs/localhost.cfg /etc/naemon/conf.d

RUN mkdir -p /etc/naemon/commands \
             /etc/naemon/services \
             /usr/share/okconfig/templates/whmcs \
             /etc/nagios/okconfig/examples \
             /etc/nagios/okconfig/services/whmcs \
             /etc/nagios/okconfig/commands/whmcs


COPY files/check_speedtest-cli.sh /usr/lib64/nagios/plugins
COPY files/check_service.pl /usr/lib64/nagios/plugins
RUN chmod +x /usr/lib64/nagios/plugins/check_speedtest-cli.sh /usr/lib64/nagios/plugins/check_service.pl

COPY configs/resource.cfg       /etc/naemon
#COPY configs/whmcs/commands.cfg  /etc/nagios/okconfig/commands/whmcs
#COPY configs/whmcs/services.cfg  /etc/nagios/okconfig/services/whmcs
COPY configs/rendered/*.cfg      /etc/naemon/conf.d

#RUN pynag config --append cfg_dir=/etc/nagios/okconfig/services/whmcs
#RUN pynag config --append cfg_dir=/etc/nagios/okconfig/commands/whmcs


{%for p in added_plugins%}
COPY file/{{p.file}} {{paths.plugins}}
RUN  chmod +x {{paths.plugins}}/{{p.file}}
{%endfor%}

{%for s in daemontools_services%}
RUN mkdir -p /service/{{s.name}}/log
RUN echo -e '#!/bin/bash\nset -e\nexec {{s.run}} 2>&1\n' > /service/{{s.name}}/run
COPY bin/run /service/{{s.name}}/log
RUN chmod +x /service/{{s.name}}/run /service/{{s.name}}/log/run
{%endfor%}


RUN naemon-ctl configtest

RUN updatedb

WORKDIR /etc/naemon

EXPOSE 80

VOLUME ["/etc/naemon", "/var/log/naemon"]
CMD ["/usr/sbin/init"]

HEALTHCHECK --interval=2m --timeout=3s CMD curl -f http://localhost:80/ || exit 1
