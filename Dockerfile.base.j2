############################################################
# Dockerfile to build a Naemon/Adagios server
# Based on appcontainers/nagios
############################################################

FROM centos:7
#FROM adagios:7

# Systemd - preparation
RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == \
	systemd-tmpfiles-setup.service ] || rm -f $i; done); \
	rm -f /lib/systemd/system/multi-user.target.wants/*;\
	rm -f /etc/systemd/system/*.wants/*;\
	rm -f /lib/systemd/system/local-fs.target.wants/*; \
	rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
	rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
	rm -f /lib/systemd/system/basic.target.wants/*;\
	rm -f /lib/systemd/system/anaconda.target.wants/*;
# Systemd - preparation ends

RUN sed -i 's/^installonly_limit=3/installonly_limit=60/g' /etc/yum.conf
# First install the opensource.is and consol labs repositories
RUN rpm -ihv http://opensource.is/repo/ok-release.rpm \
	&& rpm -Uvh https://labs.consol.de/repo/stable/rhel7/x86_64/labs-consol-stable.rhel7.noarch.rpm \
	&& yum update -y ok-release
#    && rpm -Uvh https://repo.nagios.com/nagios/8/nagios-repo-8-1.el8.noarch.rpm \
#	&& yum update -y ncpa

# Redhat/Centos users need to install the epel repositories (fedora users skip this step)
RUN yum install -y epel-release dnf

RUN sed -i 's/^installonly_limit=3/installonly_limit=60/g' /etc/dnf/dnf.conf
RUN dnf clean all && dnf -y update

# DNF
RUN dnf -y install \
	gcc-c++ rrdtool perl-Time-HiRes perl-rrdtool php-gd php php-cli wget mlocate \
	git postfix python-pip python3-pip python3-devel python-devel acl python-setuptools \
	zsh telnet openssh-server ansible-python3 openvpn openvpn-devel rpm-build tinyproxy nodejs \
    haproxy jq chrony rng-tools automake cmake gcc tcpdump ngrep bind-utils nmap-ncat at tar npm \
    fail2ban certbot tree naemon-devel redis tmux ngrep make automake net-tools \
    nagios-plugins-tcp nagios-plugins-http nagios-plugins-users nagios-plugins-smtp nagios-plugins-procs nagios-plugins-mysql nagios-plugins-mailq nagios-plugins-load nagios-plugins-dns nagios-plugins-dig nagios-plugins-disk nagios-plugins-ssh nagios-plugins-ping nagios-plugins-http nagios-plugins-fping nagios-plugins-by_ssh nagios-plugins-check_cpu nagios-plugins-file_age nagios-plugins-icmp nagios-plugins-nagios nagios-plugins-time nagios-plugins-swap \
    strace sqlite-devel jansson-devel mariadb-devel which go vim lsof psmisc

RUN yum --enablerepo=ok-testing install -y naemon naemon-livestatus adagios okconfig pnp4nagios

RUN sed -i 's/^MinSpareServers 5/MinSpareServers 1/g' /etc/tinyproxy/tinyproxy.conf
RUN sed -i 's/^MaxSpareServers 20/MaxSpareServers 2/g' /etc/tinyproxy/tinyproxy.conf
RUN sed -i 's/^StartServers 10/StartServers 1/g' /etc/tinyproxy/tinyproxy.conf
RUN sh -c 'dnf list > /root/.dnf'

COPY monitoring-plugins.tar.gz /usr/src
RUN git clone https://github.com/binRick/daemontools-encore-rpm /usr/src/daemontools-encore-rpm
RUN git clone https://github.com/binRick/jo-rpm /usr/src/jo
RUN git clone --depth 1 https://github.com/drwetter/testssl.sh.git /opt/testssl
RUN git clone https://github.com/CISOfy/lynis /usr/src/lynis
RUN git clone https://github.com/nojhan/liquidprompt.git /opt/liquidprompt
RUN git clone https://github.com/auzias/my-public-ip /opt/my-public-ip
RUN wget https://github.com/madrisan/nagios-plugins-linux/releases/download/v27/nagios-plugins-linux-27.tar.bz2 -O /usr/src/nagios-plugins-linux-27.tar.bz2
RUN sh -c 'cd /usr/src && tar jxf nagios-plugins-linux-27.tar.bz2 && cd nagios-plugins-linux-27 && ./configure --prefix=/opt/nagios-plugins-linux && make -j install'
RUN sh -c 'grep liquidprompt /etc/bashrc || echo "[[ $- = *i* ]] && source /opt/liquidprompt/liquidprompt" >> /etc/bashrc'
#RUN sh -c 'cd /usr/src && tar zxf monitoring-plugins.tar.gz && cd monitoring-plugins && ./tools/setup && ./configure --prefix=/opt/monitoring-plugins && make -j && make install'
RUN sh -c 'cd /usr/src/daemontools-encore-rpm && ./build.sh 1.11 && rpm -ivh /root/rpmbuild/RPMS/x86_64/daemontools-encore-1.11-1.el7.x86_64.rpm'
RUN sh -c 'cd /usr/src/jo && ./build.sh 1.4 && rpm -ivh /root/rpmbuild/RPMS/x86_64/jo-1.4-1.el7.x86_64.rpm'
RUN updatedb


# Now all the packages have been installed, and we need to do a little bit of
# configuration before we start doing awesome monitoring

# Lets make sure adagios can write to naemon configuration files, and that
# it is a valid git repo so we have audit trail
#RUN	git init /etc/naemon ;\
#	git config user.name "admin" ;\
#	git config user.email "admin@adagios.local" ;\
#	git add . ;\
#	git commit -a -m "Initial commit"

# Fix permissions for naemon and pnp4nagios
RUN chown -R naemon:naemon \
	/etc/naemon \
	/etc/adagios \
	/var/lib/adagios \
	/var/lib/pnp4nagios \
	/var/log/pnp4nagios \
	/var/spool/pnp4nagios \
	/etc/pnp4nagios/process_perfdata.cfg \
	/var/log/okconfig
# ACL group permissions need g+rwx
RUN	chmod g+rwx -R \
	/etc/naemon \
	/etc/adagios \
	/var/lib/adagios \
	/var/lib/pnp4nagios \
	/var/log/pnp4nagios \
	/var/spool/pnp4nagios \
	/etc/pnp4nagios/process_perfdata.cfg /var/log/okconfig

RUN	setfacl -R -m group:naemon:rwx -m d:group:naemon:rwx \
	/etc/naemon/ \
	/etc/adagios \
	/var/lib/adagios \
	/var/lib/pnp4nagios \
	/var/log/pnp4nagios \
	/var/spool/pnp4nagios \
	/etc/pnp4nagios/process_perfdata.cfg \
	/var/log/okconfig

# Make sure nagios doesn't interfere
RUN	mkdir /etc/nagios/disabled ;\
	mv /etc/nagios/{nagios,cgi}.cfg /etc/nagios/disabled/

# Make objects created by adagios go to /etc/naemon/adagios
RUN	mkdir -p /etc/naemon/adagios ;\
	pynag config --append cfg_dir=/etc/naemon/adagios

# Make adagios naemon aware
RUN sed 's|/etc/nagios/passwd|/etc/thruk/htpasswd|g' -i /etc/httpd/conf.d/adagios.conf ;\
	sed 's|user=nagios|user=naemon|g' -i /etc/httpd/conf.d/adagios.conf ;\
	sed 's|group=nagios|group=naemon|g' -i /etc/httpd/conf.d/adagios.conf ;\
	sed 's|/etc/nagios/nagios.cfg|/etc/naemon/naemon.cfg|g' -i /etc/adagios/adagios.conf ;\
	sed 's|nagios_url = "/nagios|nagios_url = "/naemon|g' -i /etc/adagios/adagios.conf ;\
	sed 's|/etc/nagios/adagios/|/etc/naemon/adagios/|g' -i /etc/adagios/adagios.conf ;\
	sed 's|/etc/init.d/nagios|/etc/init.d/naemon|g' -i /etc/adagios/adagios.conf ;\
	sed 's|nagios_service = "nagios"|nagios_service = "naemon"|g' -i /etc/adagios/adagios.conf ;\
	sed 's|livestatus_path = None|livestatus_path = "/var/cache/naemon/live"|g' -i /etc/adagios/adagios.conf ;\
	sed 's|/usr/sbin/nagios|/usr/bin/naemon|g' -i /etc/adagios/adagios.conf

# Make okconfig naemon aware
RUN sed 's|/etc/nagios/nagios.cfg|/etc/naemon/naemon.cfg|g' -i /etc/okconfig.conf ;\
	sed 's|/etc/nagios/okconfig/|/etc/naemon/okconfig/|g' -i /etc/okconfig.conf ;\
	sed 's|/etc/nagios/okconfig/examples|/etc/naemon/okconfig/examples|g' -i /etc/okconfig.conf




RUN okconfig init && okconfig verify

# Add naemon to apache group so it has permissions to pnp4nagios's session files
RUN usermod -G apache naemon

# Redirect root URL to /adagios
RUN echo "RedirectMatch ^/$ /adagios" > /etc/httpd/conf.d/redirect.conf

# Allow Adagios to control the service
RUN sed 's|nagios|naemon|g' -i /etc/sudoers.d/adagios ;\
	sed 's|/usr/sbin/naemon|/usr/bin/naemon|g' -i /etc/sudoers.d/adagios

# Make naemon use nagios plugins, more people are doing it like that. And configure pnp4nagios
RUN sed -i 's|/usr/lib64/naemon/plugins|/usr/lib64/nagios/plugins|g' /etc/naemon/resource.cfg ;\
	sed -i 's|/etc/nagios/passwd|/etc/thruk/htpasswd|g' /etc/httpd/conf.d/pnp4nagios.conf ;\
	sed -i 's|user = nagios|user = naemon|g' /etc/pnp4nagios/npcd.cfg ;\
	sed -i 's|group = nagios|group = naemon|g' /etc/pnp4nagios/npcd.cfg

# ACL group permissions need g+rwx
RUN	chmod g+rwx -R \
	/etc/naemon \
	/etc/adagios \
	/var/lib/adagios \
	/var/lib/pnp4nagios \
	/var/log/pnp4nagios \
	/var/spool/pnp4nagios \
	/etc/pnp4nagios/process_perfdata.cfg  \
	/var/log/okconfig

RUN setfacl -R -m group:naemon:rwx -m d:group:naemon:rwx \
	/etc/naemon/ \
	/etc/adagios \
	/var/lib/adagios \
	/var/lib/pnp4nagios \
	/var/log/pnp4nagios \
	/var/spool/pnp4nagios \
	/etc/pnp4nagios/process_perfdata.cfg \
	/var/log/okconfig


# Fix permissions for naemon and pnp4nagios
RUN chown -R naemon:naemon \
	/etc/naemon \
	/etc/adagios \
	/var/lib/adagios \
	/var/lib/pnp4nagios \
	/var/log/pnp4nagios \
	/var/spool/pnp4nagios \
	/etc/pnp4nagios/process_perfdata.cfg \
	/var/log/okconfig
RUN mv /etc/httpd/conf.d/thruk_cookie_auth_vhost.conf /etc/httpd/conf.d/thruk_cookie_auth_vhost.conf.disabled

RUN htpasswd -b /etc/thruk/htpasswd "$ADAGIOS_USER" "$ADAGIOS_PASS" ;\
	rm -f /etc/nagios/passwd ;\
	ln -s /etc/thruk/htpasswd /etc/nagios/passwd


COPY bin/ttyd /usr/bin/ttyd

# Enable services
RUN systemctl enable {{enabled_services|join(' ')}}

# Remove yum cache
RUN yum clean all -y && rm -rf /var/cache/yum
WORKDIR /etc/naemon

#EXPOSE 80

#VOLUME ["/etc/naemon", "/var/log/naemon"]
#CMD ["/usr/sbin/init"]

#HEALTHCHECK --interval=2m --timeout=3s CMD curl -f http://localhost:80/ || exit 1
