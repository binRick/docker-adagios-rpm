FROM fedora:33 as phase_1

ENV ADAGIOS_HOST adagios.local
ENV ADAGIOS_USER thrukadmin
ENV ADAGIOS_PASS thrukadmin
ENV DNF_ARGS	 -4 -y
ENV _DNF_ARGS	 --noplugins --enablerepo local_repo --disablerepo=fedora --disablerepo=updates --disablerepo=home_naemon

ADD files/liquidprompt.tar.gz /opt
ADD files/my-public-ip.tar.gz /opt
#ADD files/usr_local_bin /usr/local/bin

RUN sed -i 's/^installonly_limit=3/installonly_limit=60/g' /etc/dnf/dnf.conf; \
    dnf $DNF_ARGS -4 -y install 'dnf-command(config-manager)' findutils; \
    dnf config-manager --set-disabled fedora-modular; \
	dnf config-manager --set-disabled updates-modular; \
	dnf config-manager --set-disabled fedora-cisco-openh264



RUN dnf $DNF_ARGS -4 -y update; \
    dnf $DNF_ARGS -y -4 install	git python3 python3-pip nodejs npm python3-virtualenv wireguard \
			automake make gcc gcc-c++ rrdtool perl-Time-HiRes perl-rrdtool wget mlocate \
			rpm-build tcpdump ngrep bind-utils nmap-ncat at tar npm  cmake rng-tools automake haproxy jq \
			which vim lsof psmisc bubblewrap rrdtool-devel \
			xinetd inotify-tools htop iproute hostname postfix python3-mod_wsgi sudo acl \
			libstdc++-static nagios-plugins-all facter httpd-tools bash-completion geolite2-city \
			geolite2-country geolite2-asn \
			procps-ng zsh redis curl python3-wheel zsh-syntax-highlighting \
			vim-enhanced colordiff ansible sysstat \
    		coreutils python3-simplejson \
	    	glibc-langpack-en python3-devel gettext-devel borgbackup python3-setuptools
		
#RUN update-alternatives --verbose --install /usr/bin/python python /usr/bin/python3 1; \
#    update-alternatives --list


RUN dnf makecache; \
    sh -c "dnf list > /root/.dnf"

RUN echo '[[ $- = *i* ]] && source /opt/liquidprompt/liquidprompt && source /etc/.ansi && source ~/.profile.sh' >> /etc/bashrc; \
    echo '[[ $- = *i* ]] && source /opt/liquidprompt/liquidprompt && source /etc/.ansi && source ~/.profile.sh' >> /etc/zshrc


RUN \
    systemctl disable postfix atd rngd

#VOLUME ["/etc/nagios", "/var/log/nagios", "/etc/adagios", "/opt/adagios", "/opt/pynag"]

COPY files/neofetch /usr/local/bin

RUN \
    sh -c "neofetch |tee /etc/motd"

RUN updatedb

