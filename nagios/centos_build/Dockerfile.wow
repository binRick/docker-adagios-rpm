FROM centos:7 as phase_1

#RUN head -c 5 /dev/random > random_bytes && find /var/cache/rpms -type f | wc -l && \
#    find /var/cache/dnf -type f | wc -l  && \
#    find /var/cache/yum -type f | wc -l

COPY files/*.rpm /usr/src

RUN sed -i 's/^installonly_limit=3/installonly_limit=60/g' /etc/yum.conf
RUN yum install -y epel-release dnf && \
    sed -i 's/^installonly_limit=3/installonly_limit=60/g' /etc/dnf/dnf.conf && \
    dnf -4 -y install \
                    /usr/src/ok-release.rpm /usr/src/labs-consol-stable.rhel7.noarch.rpm \
                    /usr/src/ncpa-2.2.2.el7.x86_64.rpm /usr/src/daemontools-encore-1.11-1.el7.x86_64.rpm && \
    rm -f /usr/src/*.rpm

# INSTALL PACKAGES
RUN dnf -4 -y install --exclude=nagiosxx --enablerepo=ok-testing \
        gcc-c++ rrdtool perl-Time-HiRes perl-rrdtool php-gd php php-cli wget mlocate \
    naemon naemon-livestatus adagios okconfig pnp4nagios which \
        git postfix python-pip python3-pip python3-devel python-devel acl python-setuptools \
        zsh telnet openssh-server ansible-python3 openvpn openvpn-devel rpm-build tinyproxy nodejs \
    haproxy jq chrony rng-tools automake cmake gcc tcpdump ngrep bind-utils nmap-ncat at tar npm \
    fail2ban certbot tree naemon-devel redis tmux ngrep make automake net-tools \
    nagios-plugins-tcp nagios-plugins-http nagios-plugins-users nagios-plugins-smtp nagios-plugins-procs nagios-plugins-mysql \
    nagios-plugins-mailq nagios-plugins-load nagios-plugins-dns nagios-plugins-dig nagios-plugins-disk nagios-plugins-ssh \
    nagios-plugins-ping nagios-plugins-http nagios-plugins-fping nagios-plugins-by_ssh nagios-plugins-check_cpu nagios-plugins-file_age \
    nagios-plugins-icmp nagios-plugins-nagios nagios-plugins-time nagios-plugins-swap \
    strace sqlite-devel jansson-devel mariadb-devel which go vim lsof psmisc aide sysstat chkconfig bubblewrap dstat socat \
    nagios-okplugin-check_firewall_active nagios-okplugin-check_package_updates nagios-okplugin-check_ifoperstate \
    nagios-okplugin-get_network_stat nagios-okplugin-check_disks perl-Net-DNS nagios-okplugin-check_http_multi \
    python2-speedtest-cli perl-Monitoring-Plugin perl-Switch man-db python-virtualenv libacl-devel keepalived



ENV ADAGIOS_HOST adagios.local
ENV ADAGIOS_USER thrukadmin
ENV ADAGIOS_PASS thrukadmin

# Enable Naemon performance data and service performance data
RUN pynag config --set "process_performance_data=1" ;\
	pynag config --set 'service_perfdata_file=/var/lib/naemon/service-perfdata' ;\
	pynag config --set 'service_perfdata_file_template=DATATYPE::SERVICEPERFDATA\tTIMET::$TIMET$\tHOSTNAME::$HOSTNAME$\tSERVICEDESC::$SERVICEDESC$\tSERVICEPERFDATA::$SERVICEPERFDATA$\tSERVICECHECKCOMMAND::$SERVICECHECKCOMMAND$\tHOSTSTATE::$HOSTSTATE$\tHOSTSTATETYPE::$HOSTSTATETYPE$\tSERVICESTATE::$SERVICESTATE$\tSERVICESTATETYPE::$SERVICESTATETYPE$' ;\
	pynag config --set 'service_perfdata_file_mode=a' ;\
	pynag config --set 'service_perfdata_file_processing_interval=15';\
	pynag config --set 'service_perfdata_file_processing_command=process-service-perfdata-file'

# host performance data
RUN pynag config --set 'host_perfdata_file=/var/lib/naemon/host-perfdata' ;\
	pynag config --set 'host_perfdata_file_template=DATATYPE::HOSTPERFDATA\tTIMET::$TIMET$\tHOSTNAME::$HOSTNAME$\tHOSTPERFDATA::$HOSTPERFDATA$\tHOSTCHECKCOMMAND::$HOSTCHECKCOMMAND$\tHOSTSTATE::$HOSTSTATE$\tHOSTSTATETYPE::$HOSTSTATETYPE$' ;\
	pynag config --set 'host_perfdata_file_mode=a' ;\
	pynag config --set 'host_perfdata_file_processing_interval=15' ;\
	pynag config --set 'host_perfdata_file_processing_command=process-host-perfdata-file'

# host commands
RUN pynag add command command_name=process-service-perfdata-file command_line='/bin/mv /var/lib/naemon/service-perfdata /var/spool/pnp4nagios/service-perfdata.$TIMET$' ;\
	pynag add command command_name=process-host-perfdata-file command_line='/bin/mv /var/lib/naemon/host-perfdata /var/spool/pnp4nagios/host-perfdata.$TIMET$' ;\
	pynag config --append cfg_dir=/etc/naemon/commands/

RUN rm -f /etc/naemon/conf.d/windows.cfg \
    /etc/nagios/objects/windows.cfg \
    /etc/nagios/objects/printer.cfg \
    /etc/naemon/conf.d/switch.cfg \
    /etc/nagios/objects/switch.cfg \
    /etc/naemon/conf.d/printer.cfg  \
    /etc/naemon/conf.d/localhost.cfg \
    /etc/naemon/conf.d/templates/services.cfg

RUN mkdir -p /etc/naemon/commands \
             /etc/naemon/services \
             /usr/share/okconfig/templates/whmcs \
             /etc/nagios/okconfig/examples \
             /etc/nagios/okconfig/services/whmcs \
             /etc/nagios/okconfig/commands/whmcs \
             /etc/naemon/conf.d

COPY configs/localhost.cfg /etc/naemon/conf.d

RUN touch /var/log/naemon/livestatus.log && chown naemon:naemon /var/log/naemon/livestatus.log
RUN touch /var/log/naemon/debug.log && chown naemon:naemon /var/log/naemon/debug.log

COPY files/neofetch /usr/local/bin
COPY files/check_speedtest-cli.sh /usr/lib64/nagios/plugins
COPY files/check_service.pl /usr/lib64/nagios/plugins
RUN chmod +x /usr/lib64/nagios/plugins/check_speedtest-cli.sh /usr/lib64/nagios/plugins/check_service.pl /usr/local/bin/neofetch

COPY configs/resource.cfg       /etc/naemon
#COPY configs/whmcs/commands.cfg  /etc/nagios/okconfig/commands/whmcs
#COPY configs/whmcs/services.cfg  /etc/nagios/okconfig/services/whmcs
COPY configs/rendered/*.cfg      /etc/naemon/conf.d

#RUN pynag config --append cfg_dir=/etc/nagios/okconfig/services/whmcs
#RUN pynag config --append cfg_dir=/etc/nagios/okconfig/commands/whmcs

#RUN unlink /etc/naemon/objects/templates.cfg
#RUN unlink /etc/naemon/conf.d/templates.cfg
#RUN unlink /etc/naemon/resource.cfg




COPY files/check_systemd_service.sh /usr/lib64/nagios/plugins
RUN  chmod +x /usr/lib64/nagios/plugins/check_systemd_service.sh

COPY files/check_haproxy /usr/lib64/nagios/plugins
RUN  chmod +x /usr/lib64/nagios/plugins/check_haproxy




#   CREDENTIALS
RUN rm -f /etc/thruk/htpasswd; htpasswd -cb /etc/thruk/htpasswd "$ADAGIOS_USER" "$ADAGIOS_PASS" ;\
    rm -f /etc/nagios/passwd ;\
    ln -s /etc/thruk/htpasswd /etc/nagios/passwd



RUN naemon-ctl configtest
RUN neofetch > /etc/motd
RUN updatedb

WORKDIR /etc/naemon

EXPOSE 80

VOLUME ["/etc/naemon", "/var/log/naemon"]
CMD ["/usr/sbin/init"]

HEALTHCHECK --interval=2m --timeout=3s CMD curl -f http://localhost:80/ || exit 1



